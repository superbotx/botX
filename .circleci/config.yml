# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: tianhaoz95/desktop-ros-docker-image:kinetic

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: run module installation
          command: |
            python3 setup.py build
            python3 setup.py install

      - run:
          name: install dependencies
          command: |
            python3 -m venv --system-site-packages venv
            . venv/bin/activate
            pip3 install -r requirements.txt

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io

      - run:
          name: check pip packages
          command: |
            . venv/bin/activate
            pip list

      - run:
          name: check pip3 packages
          command: |
            . venv/bin/activate
            pip3 list

      - run:
          name: run unit tests
          command: |
            . venv/bin/activate
            pytest  --cov=botX

      - run:
          name: run command line test
          command: |
            . venv/bin/activate
            cd ~/repo
            botX create ci_proj
            cd ci_proj
            botX version

      - run:
          name: send coverage report
          command: |
            . venv/bin/activate
            codecov

      - store_artifacts:
          path: test-reports
          destination: test-reports
